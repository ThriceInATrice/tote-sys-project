
# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  workflow_dispatch:
    inputs:
      environment:
        type: string
        default: dev
        required: false
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    container: python:latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: test_database
          POSTGRES_PASSWORD: postgres_password
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres_user
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.in ]; then pip install -r requirements.in; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          
    - name: Install PostgreSQL client
      run: |
        apt-get update
        apt-get install --yes postgresql-client

    - name: Create mock database and run tests
      run: |
        export PYTHONPATH=$(pwd)
        make test-extract
      env:
        PGHOST: postgres
        PGPASSWORD: postgres_password
        PGUSER: postgres_user
        PGDATABASE: test_database
        USER: postgres_user