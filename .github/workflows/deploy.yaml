# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  workflow_dispatch:
    inputs:
      environment:
        type: string
        default: dev
        required: false
  push:
    branches: [ "main", "new-workflow" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.in ]; then pip install -r requirements.in; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: connect to postgres
      uses: ikalnytskyi/action-setup-postgres@v7
      with:
        username: user
        password: password
        database: test_database
        port: 5432
        postgres-version: "14"
        ssl: false
      id: postgres

    - run: psql ${{ steps.postgres.outputs.connection-uri }} -c "SELECT 1"
    - run: psql service=${{ steps.postgres.outputs.service-name }} -c "SELECT 1"
    - run: psql -c "SELECT 1"
      env:
        PGSERVICE: ${{ steps.postgres.outputs.service-name }}
    - run: |
        whoami
        export PYTHONPATH=$(pwd)
        sudo systemctl start postgresql
        systemctl status postgresql
        sudo find /tmp/ -name .s.PGSQL.5432
        sh test_get_new_data_from_database.sh
    # - name: Test with pytest
    #   run: |
    #     export PYTHONPATH=$(pwd)
    #     pytest test/test_get_new_data_from_database.py -k 'test_get_database_creds_can_return_creds' -vvvrP