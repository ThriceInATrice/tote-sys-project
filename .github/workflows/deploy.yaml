# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python



name: Python application

on:
  push:
    branches: [ "main", "test_database" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read


jobs:
  build:

    runs-on: ubuntu-latest

    # Label of the container job
    container-job:
      # Containers must run in Linux based operating systems
      runs-on: ubuntu-latest
      # Docker Hub image that `container-job` executes in
      container: node:20-bookworm-slim

      # Service containers to run with `container-job`
      services:
        # Label used to access the service container
        postgres:
          # Docker Hub image
          image: postgres
          # Provide the password for postgres
          env:
            POSTGRES_PASSWORD: postgres
          # Set health checks to wait until postgres has started
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5

      steps:
        # Downloads a copy of the code in your repository before running CI tests
        - name: Check out repository code
          uses: actions/checkout@v4

        # Performs a clean installation of all dependencies in the `package.json` file
        # For more information, see https://docs.npmjs.com/cli/ci.html
        - name: Install dependencies
          run: npm ci

        - name: Connect to PostgreSQL
          # Runs a script that creates a PostgreSQL table, populates
          # the table with data, and then retrieves the data.
          run: node client.js
          # Environment variables used by the `client.js` script to create a new PostgreSQL table.
          env:
            # The hostname used to communicate with the PostgreSQL service container
            POSTGRES_HOST: postgres
            # The default PostgreSQL port
            POSTGRES_PORT: 5432
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        export PYTHONPATH=$(pwd)
        sh test_get_new_data_from_database.sh